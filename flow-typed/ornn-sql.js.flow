declare type Value = string | number | void;

declare type InsertConfig = {|
  +tableName: string,
  +data: Object,
|};

declare type ColumnConfig = {|
  name: string,
  type: string,
  required: boolean,
  default: ValueDefault | void,
  primary: boolean,
  unique: boolean,
|};

declare type CreateTableConfig = {|
  +tableName: string,
  +columns: ColumnConfig[],
|};

declare module '@ornn/sql' {
  declare class Insert {
    constructor(config: InsertConfig): CreateTable;
    +tableName: string;
    +sql: string;
  }

  declare export var Insert: typeof Insert;

  declare class CreateTable {
    constructor(config: CreateTableConfig): CreateTable;
    +tableName: string;
    +sql: string;
  }

  declare export var CreateTable: typeof CreateTable;

  // TODO enum
  declare export var PG_TYPES: { [string]: string };

  declare export var helpers: {
    isNil(target: any): boolean,
    isFunction(target: any): boolean,
    isObject(target: any): boolean,
  };
}
