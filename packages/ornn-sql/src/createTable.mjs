/* @flow */
import { nameEsc, indent, isVoid, valueEsc } from './helpers';

class CreateTable {
  +tableName: string = '';
  +sql: string = '';

  constructor(config: CreateTableConfig) {
    this.tableName = config.tableName;

    this.sql = this.parseConfig(config);
  }

  +parseConfig = (config: CreateTableConfig): string =>
    `CREATE TABLE ${nameEsc(config.tableName)} (\n`.concat(
      config.columns
        .map(this.describeColumn)
        .map(indent())
        .join(',\n')
        .concat('\n);')
    );

  // TODO omit some criteria when not needed
  +describeColumn = (column: ColumnConfig) =>
    [
      nameEsc(column.name),
      this.getType(column.type),
      this.getDefault(column.default),
      column.identity && 'GENERATED BY DEFAULT AS IDENTITY',
      !column.identity && column.required && 'NOT NULL',
      !column.identity && column.unique && 'UNIQUE',
      column.primaryKey && 'PRIMARY KEY',
    ]
      .filter(Boolean)
      .join(' ');

  // TODO validate type, should be one of `./pg-types`
  +getType = (type: string): string => type;

  +getDefault = (value: ValueDefault): string | boolean =>
    isVoid(value) ? false : `DEFAULT ${valueEsc(value)}`;
}

export default CreateTable;
